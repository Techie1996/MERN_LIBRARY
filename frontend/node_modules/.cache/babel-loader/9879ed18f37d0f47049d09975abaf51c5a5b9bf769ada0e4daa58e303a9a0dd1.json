{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\BookCard.js\",\n  _s = $RefreshSig$();\n// BookCard.js\n\nimport React from 'react';\nimport { Box, Heading, Text, useColorModeValue, Button, useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookCard = ({\n  book,\n  onAvailabilityChange,\n  onTransaction\n}) => {\n  _s();\n  const cardBgColor = useColorModeValue('white', 'gray.700');\n  const toast = useToast();\n  const handleAvailabilityChange = () => {\n    const newAvailability = book.availabilityStatus === 'Available' ? 'Not Available' : 'Available';\n    onAvailabilityChange(book.id, newAvailability);\n\n    // Display a toast message\n    showToast(`Availability for \"${book.volumeInfo.title}\" updated to ${newAvailability}`);\n  };\n  const handleTransaction = (bookId, transactionType) => {\n    // Perform the transaction logic here\n    onTransaction(book.id, transactionType);\n\n    // Display a toast message\n    showToast(`Transaction: ${transactionType} for \"${book.volumeInfo.title}\"`);\n  };\n  const showToast = message => {\n    toast({\n      title: message,\n      status: 'info',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: \"3\",\n    borderWidth: \"1px\",\n    borderRadius: \"md\",\n    bg: cardBgColor,\n    _hover: {\n      shadow: 'md'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"sm\",\n      mb: \"2\",\n      noOfLines: 2,\n      children: book.volumeInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), book.volumeInfo.authors && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xs\",\n      color: \"gray.500\",\n      noOfLines: 1,\n      children: [\"Author(s): \", book.volumeInfo.authors.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), book.volumeInfo.description && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xs\",\n      color: \"gray.500\",\n      noOfLines: 3,\n      children: book.volumeInfo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), book.availabilityStatus && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xs\",\n      color: \"green.500\",\n      children: [\"Availability: \", book.availabilityStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"2\",\n      size: \"sm\",\n      onClick: handleAvailabilityChange,\n      children: book.availabilityStatus === 'Available' ? 'Mark as Not Available' : 'Mark as Available'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"2\",\n      size: \"sm\",\n      onClick: () => handleTransaction('Borrow'),\n      children: \"Borrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"2\",\n      size: \"sm\",\n      onClick: () => handleTransaction('Return'),\n      children: \"Return\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, book.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCard, \"fGlm+FXYivSxAEanlNfjJz0wUMs=\", false, function () {\n  return [useColorModeValue, useToast];\n});\n_c = BookCard;\nexport default BookCard;\nvar _c;\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"names":["React","Box","Heading","Text","useColorModeValue","Button","useToast","jsxDEV","_jsxDEV","BookCard","book","onAvailabilityChange","onTransaction","_s","cardBgColor","toast","handleAvailabilityChange","newAvailability","availabilityStatus","id","showToast","volumeInfo","title","handleTransaction","bookId","transactionType","message","status","duration","isClosable","p","borderWidth","borderRadius","bg","_hover","shadow","children","as","size","mb","noOfLines","fileName","_jsxFileName","lineNumber","columnNumber","authors","fontSize","color","join","description","mt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/BookCard.js"],"sourcesContent":["// BookCard.js\r\n\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  useColorModeValue,\r\n  Button,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\n\r\nconst BookCard = ({ book, onAvailabilityChange, onTransaction }) => {\r\n  const cardBgColor = useColorModeValue('white', 'gray.700');\r\n  const toast = useToast();\r\n\r\n  const handleAvailabilityChange = () => {\r\n    const newAvailability = book.availabilityStatus === 'Available' ? 'Not Available' : 'Available';\r\n    onAvailabilityChange(book.id, newAvailability);\r\n\r\n    // Display a toast message\r\n    showToast(`Availability for \"${book.volumeInfo.title}\" updated to ${newAvailability}`);\r\n  };\r\n\r\n  const handleTransaction = (bookId,transactionType) => {\r\n    // Perform the transaction logic here\r\n    onTransaction(book.id, transactionType);\r\n\r\n    // Display a toast message\r\n    showToast(`Transaction: ${transactionType} for \"${book.volumeInfo.title}\"`);\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    toast({\r\n      title: message,\r\n      status: 'info',\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      key={book.id}\r\n      p=\"3\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"md\"\r\n      bg={cardBgColor}\r\n      _hover={{ shadow: 'md' }}\r\n    >\r\n      <Heading as=\"h3\" size=\"sm\" mb=\"2\" noOfLines={2}>\r\n        {book.volumeInfo.title}\r\n      </Heading>\r\n      {book.volumeInfo.authors && (\r\n        <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={1}>\r\n          Author(s): {book.volumeInfo.authors.join(', ')}\r\n        </Text>\r\n      )}\r\n      {book.volumeInfo.description && (\r\n        <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={3}>\r\n          {book.volumeInfo.description}\r\n        </Text>\r\n      )}\r\n      {book.availabilityStatus && (\r\n        <Text fontSize=\"xs\" color=\"green.500\">\r\n          Availability: {book.availabilityStatus}\r\n        </Text>\r\n      )}\r\n      <Button mt=\"2\" size=\"sm\" onClick={handleAvailabilityChange}>\r\n        {book.availabilityStatus === 'Available' ? 'Mark as Not Available' : 'Mark as Available'}\r\n      </Button>\r\n      <Button mt=\"2\" size=\"sm\" onClick={() => handleTransaction('Borrow')}>\r\n        Borrow\r\n      </Button>\r\n      <Button mt=\"2\" size=\"sm\" onClick={() => handleTransaction('Return')}>\r\n        Return\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}