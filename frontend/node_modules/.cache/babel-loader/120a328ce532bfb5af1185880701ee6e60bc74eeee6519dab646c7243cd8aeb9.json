{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Authentication\\\\Logout.js\",\n  _s = $RefreshSig$();\n// src/authentication/Logout.js\n\nimport React, { useState } from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    try {\n      // Clear the authentication token (if stored locally)\n      localStorage.removeItem('authToken');\n\n      // Redirect to the login page after logout\n      navigate('/');\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    bg: isHovered ? 'green' : 'gray',\n    _hover: {\n      bg: 'red.500'\n    },\n    onClick: () => handleLogout(),\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"/zJ0UPNxCI404DRu4X8w1RBA7nw=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","Button","useNavigate","jsxDEV","_jsxDEV","Logout","_s","isHovered","setIsHovered","navigate","handleLogout","localStorage","removeItem","error","console","bg","_hover","onClick","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Authentication/Logout.js"],"sourcesContent":["// src/authentication/Logout.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button } from '@chakra-ui/react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Clear the authentication token (if stored locally)\r\n      localStorage.removeItem('authToken');\r\n\r\n      // Redirect to the login page after logout\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      bg={isHovered ? 'green' : 'gray'}\r\n      _hover={{ bg: 'red.500' }}\r\n      onClick={() => handleLogout()}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;;MAEpC;MACAH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACET,OAAA,CAACH,MAAM;IACLc,EAAE,EAAER,SAAS,GAAG,OAAO,GAAG,MAAO;IACjCS,MAAM,EAAE;MAAED,EAAE,EAAE;IAAU,CAAE;IAC1BE,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,CAAE;IAC9BQ,YAAY,EAAEA,CAAA,KAAMV,YAAY,CAAC,IAAI,CAAE;IACvCW,YAAY,EAAEA,CAAA,KAAMX,YAAY,CAAC,KAAK,CAAE;IAAAY,QAAA,EACzC;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAClB,EAAA,CA3BID,MAAM;EAAA,QAEOH,WAAW;AAAA;AAAAuB,EAAA,GAFxBpB,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}