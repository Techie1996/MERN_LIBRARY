{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Library.js\",\n  _s = $RefreshSig$();\n// components/Library.js\n\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Heading, HStack, Button } from '@chakra-ui/react';\nimport MyBooks from './MyBooks';\nimport Google from './Google';\nimport Logout from './Authentication/Logout';\nimport AdminDashboard from './AdminDashboard'; // Import the AdminDashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Library = () => {\n  _s();\n  const [activeComponent, setActiveComponent] = useState('MyBooks');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userInfo'));\n    const userIsAdmin = userData && userData.isAdmin; // Assuming the user info has the 'isAdmin' property\n\n    setIsAdmin(userIsAdmin);\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  const handleButtonClick = component => {\n    setActiveComponent(component);\n  };\n  const handleTransaction = async (bookId, transactionType) => {\n    try {\n      // Make an API request to your backend to update the transaction\n      const response = await fetch(`/api/transactions/${bookId}`, {\n        method: 'POST',\n        // or 'PUT' depending on your API design\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any additional headers as needed, e.g., authentication token\n        },\n        body: JSON.stringify({\n          transactionType\n        })\n      });\n      if (response.ok) {\n        // Successfully updated the transaction\n        console.log(`Transaction: ${transactionType} for Book ID ${bookId} successful.`);\n        // Optionally, you can update the UI to reflect the transaction\n      } else {\n        // Handle error responses from the API\n        console.error(`Transaction failed for Book ID ${bookId}.`);\n      }\n    } catch (error) {\n      // Handle network or other errors\n      console.error(`Error during transaction for Book ID ${bookId}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"8\",\n    width: \"100%\",\n    maxW: \"1000px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: activeComponent === 'MyBooks' ? 'blue' : 'gray',\n        onClick: () => handleButtonClick('MyBooks'),\n        children: \"My Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: activeComponent === 'Google' ? 'green' : 'gray',\n        onClick: () => handleButtonClick('Google'),\n        children: \"Google Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: isAdmin ? 'Admin Dashboard' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      isAdmin: isAdmin,\n      isEditable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [activeComponent === 'MyBooks' && /*#__PURE__*/_jsxDEV(MyBooks, {\n        isEditable: true,\n        onTransaction: handleTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }, this), activeComponent === 'Google' && /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyBooks, {\n        isEditable: true,\n        onTransaction: handleTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this);\n};\n_s(Library, \"/GCBn3PZbWw1e399tcs38/Zy+B8=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","HStack","Button","MyBooks","Google","Logout","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","Library","_s","activeComponent","setActiveComponent","isAdmin","setIsAdmin","userData","JSON","parse","localStorage","getItem","userIsAdmin","handleButtonClick","component","handleTransaction","bookId","transactionType","response","fetch","method","headers","body","stringify","ok","console","log","error","spacing","width","maxW","marginX","children","colorScheme","onClick","fileName","_jsxFileName","lineNumber","columnNumber","as","size","isEditable","onTransaction","BookCard","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Library.js"],"sourcesContent":["// components/Library.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { VStack, Heading, HStack, Button } from '@chakra-ui/react';\r\nimport MyBooks from './MyBooks';\r\nimport Google from './Google';\r\nimport Logout from './Authentication/Logout';\r\nimport AdminDashboard from './AdminDashboard'; // Import the AdminDashboard component\r\n\r\nconst Library = () => {\r\n  const [activeComponent, setActiveComponent] = useState('MyBooks');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem('userInfo'));\r\n    const userIsAdmin = userData && userData.isAdmin; // Assuming the user info has the 'isAdmin' property\r\n\r\n    setIsAdmin(userIsAdmin);\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  const handleButtonClick = (component) => {\r\n    setActiveComponent(component);\r\n  };\r\n\r\n  const handleTransaction = async (bookId, transactionType) => {\r\n    try {\r\n      // Make an API request to your backend to update the transaction\r\n      const response = await fetch(`/api/transactions/${bookId}`, {\r\n        method: 'POST', // or 'PUT' depending on your API design\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Add any additional headers as needed, e.g., authentication token\r\n        },\r\n        body: JSON.stringify({ transactionType }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Successfully updated the transaction\r\n        console.log(`Transaction: ${transactionType} for Book ID ${bookId} successful.`);\r\n        // Optionally, you can update the UI to reflect the transaction\r\n      } else {\r\n        // Handle error responses from the API\r\n        console.error(`Transaction failed for Book ID ${bookId}.`);\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      console.error(`Error during transaction for Book ID ${bookId}:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n<VStack spacing=\"8\" width=\"100%\" maxW=\"1000px\" marginX=\"auto\">\r\n      <HStack spacing=\"5\">\r\n        <Button\r\n          colorScheme={activeComponent === 'MyBooks' ? 'blue' : 'gray'}\r\n          onClick={() => handleButtonClick('MyBooks')}\r\n        >\r\n          My Books\r\n        </Button>\r\n        <Button\r\n          colorScheme={activeComponent === 'Google' ? 'green' : 'gray'}\r\n          onClick={() => handleButtonClick('Google')}\r\n        >\r\n          Google Books\r\n        </Button>\r\n        <Logout />\r\n      </HStack>\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        {isAdmin ? 'Admin Dashboard' : ''}\r\n      </Heading>\r\n      {isAdmin ? (\r\n        <AdminDashboard isAdmin={isAdmin} isEditable={true} />\r\n      ) : (\r\n        <>\r\n          {activeComponent === 'MyBooks' && <MyBooks isEditable={true} onTransaction={handleTransaction} />}\r\n          {activeComponent === 'Google' && <Google />}\r\n        </>\r\n      )}\r\n      {isAdmin && (\r\n        <>\r\n          {/* Display the same content as in the library with editable availability status */}\r\n          <MyBooks isEditable={true} onTransaction={handleTransaction} />\r\n                    <BookCard />\r\n          {/* You can add more components below if needed */}\r\n        </>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}