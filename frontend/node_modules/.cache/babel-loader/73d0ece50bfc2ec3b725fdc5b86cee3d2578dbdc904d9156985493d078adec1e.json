{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Google.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Heading, Input, Button, SimpleGrid, Box, Text, Spinner } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Google = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchBooks = async query => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5000/api/book/fetch?searchTerm=${query}`);\n      setBooks(response.data);\n    } catch (error) {\n      console.error('Error fetching books:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchBooks('JavaScript');\n  }, []);\n  const handleSearch = () => {\n    fetchBooks(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    color: \"black\",\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search for books...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"blue.500\",\n      size: \"lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), !loading && books.length > 0 && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        sm: 2,\n        md: 3\n      },\n      spacing: 5,\n      children: books.slice(0, 6).map(book => /*#__PURE__*/_jsxDEV(Box, {\n        p: \"3\",\n        borderWidth: \"1px\",\n        borderRadius: \"md\"\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Google, \"L8RqVQL4KE9AfKnHKhOmMXdt5nk=\");\n_c = Google;\nexport default Google;\nvar _c;\n$RefreshReg$(_c, \"Google\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","Input","Button","SimpleGrid","Box","Text","Spinner","axios","jsxDEV","_jsxDEV","Google","_s","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","fetchBooks","query","response","get","data","error","console","message","handleSearch","spacing","color","width","maxW","marginX","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","colorScheme","onClick","length","columns","base","sm","md","slice","map","book","p","borderWidth","borderRadius","id","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Google.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { VStack, Heading, Input, Button, SimpleGrid, Box, Text, Spinner } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\n\r\nconst Google = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchBooks = async (query) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`http://localhost:5000/api/book/fetch?searchTerm=${query}`);\r\n      setBooks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks('JavaScript');\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color=\"black\" width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n      {loading && <Spinner color=\"blue.500\" size=\"lg\" />}\r\n      {!loading && books.length > 0 && (\r\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5}>\r\n          {books.slice(0,6).map((book) => (\r\n            <Box key={book.id} p=\"3\" borderWidth=\"1px\" borderRadius=\"md\">\r\n              {/* Book details rendering goes here */}\r\n            </Box>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,QAAQ,kBAAkB;AACjG,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMqB,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,mDAAkDF,KAAM,EAAC,CAAC;MAC5FJ,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdoB,UAAU,CAAC,YAAY,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBR,UAAU,CAACN,UAAU,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA,CAACV,MAAM;IAAC4B,OAAO,EAAC,GAAG;IAACC,KAAK,EAAC,OAAO;IAACC,KAAK,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;IAACC,OAAO,EAAC,MAAM;IAAAC,QAAA,gBACxEvB,OAAA,CAACT,OAAO;MAACiC,EAAE,EAAC,IAAI;MAACC,IAAI,EAAC,IAAI;MAAAF,QAAA,EAAC;IAE3B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACV7B,OAAA,CAACR,KAAK;MACJsC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAE5B,UAAW;MAClB6B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF7B,OAAA,CAACP,MAAM;MAAC0C,WAAW,EAAC,MAAM;MAACC,OAAO,EAAEnB,YAAa;MAAAM,QAAA,EAAC;IAElD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRtB,OAAO,iBAAIP,OAAA,CAACH,OAAO;MAACsB,KAAK,EAAC,UAAU;MAACM,IAAI,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjD,CAACtB,OAAO,IAAIF,KAAK,CAACgC,MAAM,GAAG,CAAC,iBAC3BrC,OAAA,CAACN,UAAU;MAAC4C,OAAO,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAACvB,OAAO,EAAE,CAAE;MAAAK,QAAA,EACxDlB,KAAK,CAACqC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACzB5C,OAAA,CAACL,GAAG;QAAekD,CAAC,EAAC,GAAG;QAACC,WAAW,EAAC,KAAK;QAACC,YAAY,EAAC;MAAI,GAAlDH,IAAI,CAACI,EAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAAC3B,EAAA,CAlDID,MAAM;AAAAgD,EAAA,GAANhD,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}