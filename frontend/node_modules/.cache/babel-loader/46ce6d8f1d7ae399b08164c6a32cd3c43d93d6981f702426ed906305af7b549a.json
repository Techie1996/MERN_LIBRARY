{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\MyBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Heading, Input, Button, SimpleGrid, Text, useColorModeValue, useToast } from '@chakra-ui/react';\nimport BookCard from './BookCard'; // Import the BookCard component\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBooks = ({\n  isAdmin\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [books, setBooks] = useState([]);\n  const toast = useToast();\n  const fetchBooks = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/book/my-books?searchTerm=${query}`);\n      const data = response.data;\n      console.log('Fetched data:', data); // Log the fetched data to see what you're getting\n      setBooks(data);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n      showToast('Error fetching books');\n    }\n  };\n  useEffect(() => {\n    // Set initial state to all books when the component mounts\n    fetchBooks('');\n  }, [fetchBooks]);\n  const handleSearch = () => {\n    fetchBooks(searchTerm);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleAvailabilityChange = (bookId, newAvailability) => {\n    // Update the availability status of the book with the given bookId\n    const updatedBooks = books.map(book => book.id === bookId ? {\n      ...book,\n      availabilityStatus: newAvailability\n    } : book);\n\n    // Update the state with the modified books array\n    setBooks(updatedBooks);\n  };\n  const showToast = message => {\n    toast({\n      title: message,\n      status: 'info',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  const textColor = useColorModeValue('black', 'white');\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    color: textColor,\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search for books...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyDown: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), books.length > 0 ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        sm: 2,\n        md: 3\n      },\n      spacing: 5,\n      children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book,\n        isAdmin: isAdmin,\n        onAvailabilityChange: isAdmin ? handleAvailabilityChange : undefined\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      children: \"No books found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MyBooks, \"uyrQ8RTRDcYpa3KfTUw7LQox+mk=\", false, function () {\n  return [useToast, useColorModeValue];\n});\n_c = MyBooks;\nexport default MyBooks;\nvar _c;\n$RefreshReg$(_c, \"MyBooks\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","Input","Button","SimpleGrid","Text","useColorModeValue","useToast","BookCard","axios","jsxDEV","_jsxDEV","MyBooks","isAdmin","_s","searchTerm","setSearchTerm","books","setBooks","toast","fetchBooks","query","response","get","data","console","log","error","showToast","handleSearch","handleKeyPress","e","key","handleAvailabilityChange","bookId","newAvailability","updatedBooks","map","book","id","availabilityStatus","message","title","status","duration","isClosable","textColor","spacing","color","width","maxW","marginX","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyDown","colorScheme","onClick","length","columns","base","sm","md","onAvailabilityChange","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/MyBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  VStack,\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport BookCard from './BookCard'; // Import the BookCard component\r\nimport axios from 'axios';\r\n\r\nconst MyBooks = ({ isAdmin }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const toast = useToast();\r\n\r\n  const fetchBooks = async (query) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/book/my-books?searchTerm=${query}`);\r\n      const data = response.data;\r\n      console.log('Fetched data:', data); // Log the fetched data to see what you're getting\r\n      setBooks(data);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error);\r\n      showToast('Error fetching books');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set initial state to all books when the component mounts\r\n    fetchBooks('');\r\n  }, [fetchBooks]);\r\n\r\n  const handleSearch = () => {\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleAvailabilityChange = (bookId, newAvailability) => {\r\n    // Update the availability status of the book with the given bookId\r\n    const updatedBooks = books.map((book) =>\r\n      book.id === bookId ? { ...book, availabilityStatus: newAvailability } : book\r\n    );\r\n\r\n    // Update the state with the modified books array\r\n    setBooks(updatedBooks);\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    toast({\r\n      title: message,\r\n      status: 'info',\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const textColor = useColorModeValue('black', 'white');\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color={textColor} width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        onKeyDown={handleKeyPress}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n      {books.length > 0 ? (\r\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5}>\r\n          {books.map((book) => (\r\n            <BookCard\r\n              key={book.id}\r\n              book={book}\r\n              isAdmin={isAdmin}\r\n              onAvailabilityChange={isAdmin ? handleAvailabilityChange : undefined}\r\n            />\r\n          ))}\r\n        </SimpleGrid>\r\n      ) : (\r\n        <Text>No books found</Text>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MyBooks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}