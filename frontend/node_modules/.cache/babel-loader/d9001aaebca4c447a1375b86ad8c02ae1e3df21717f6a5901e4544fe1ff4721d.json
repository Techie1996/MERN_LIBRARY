{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Library.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Heading, Input, Button, SimpleGrid, Box, Text } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Library = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [books, setBooks] = useState([]);\n  const fetchBooks = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/book/fetch?searchTerm=${query}`);\n      setBooks(response.data);\n    } catch (error) {\n      console.error('Error fetching books:', error.message);\n    }\n  };\n\n  // Use useEffect to fetch books when the component mounts\n  useEffect(() => {\n    // Fetch default books when the component mounts\n    fetchBooks('JavaScript'); // You can replace 'JavaScript' with any default query\n  }, []); // Empty dependency array ensures this effect runs only once when the component mounts\n\n  const handleSearch = () => {\n    // Fetch books based on the search term\n    fetchBooks(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    color: \"black\",\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search for books...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), books.length > 0 && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        sm: 2,\n        md: 3\n      },\n      spacing: 5,\n      marginTop: \"5\",\n      children: books.slice(0, 9).map(book => /*#__PURE__*/_jsxDEV(Box, {\n        p: \"3\",\n        borderWidth: \"1px\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          size: \"sm\",\n          mb: \"2\",\n          noOfLines: 2,\n          children: book.volumeInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), book.volumeInfo.authors && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xs\",\n          color: \"gray.500\",\n          noOfLines: 1,\n          children: [\"Author(s): \", book.volumeInfo.authors.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), book.volumeInfo.description && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xs\",\n          color: \"gray.500\",\n          noOfLines: 3,\n          children: book.volumeInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Library, \"3yin1g7MqE+8MJ/UoeoJVvre404=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","Input","Button","SimpleGrid","Box","Text","axios","jsxDEV","_jsxDEV","Library","_s","searchTerm","setSearchTerm","books","setBooks","fetchBooks","query","response","get","data","error","console","message","handleSearch","spacing","color","width","maxW","marginX","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","colorScheme","onClick","length","columns","base","sm","md","marginTop","slice","map","book","p","borderWidth","borderRadius","mb","noOfLines","volumeInfo","title","authors","fontSize","join","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Library.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { VStack, Heading, Input, Button, SimpleGrid, Box, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\n\r\nconst Library = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const fetchBooks = async (query) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/book/fetch?searchTerm=${query}`);\r\n      setBooks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error.message);\r\n    }\r\n  };\r\n\r\n  // Use useEffect to fetch books when the component mounts\r\n  useEffect(() => {\r\n    // Fetch default books when the component mounts\r\n    fetchBooks('JavaScript'); // You can replace 'JavaScript' with any default query\r\n  }, []); // Empty dependency array ensures this effect runs only once when the component mounts\r\n\r\n  const handleSearch = () => {\r\n    // Fetch books based on the search term\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color=\"black\" width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n      {books.length > 0 && (\r\n<SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5} marginTop=\"5\">\r\n  {books.slice(0, 9).map((book) => (\r\n    <Box key={book.id} p=\"3\" borderWidth=\"1px\" borderRadius=\"md\">\r\n      <Heading as=\"h3\" size=\"sm\" mb=\"2\" noOfLines={2}>\r\n        {book.volumeInfo.title}\r\n      </Heading>\r\n      {book.volumeInfo.authors && (\r\n        <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={1}>\r\n          Author(s): {book.volumeInfo.authors.join(', ')}\r\n        </Text>\r\n      )}\r\n      {book.volumeInfo.description && (\r\n        <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={3}>\r\n          {book.volumeInfo.description}\r\n        </Text>\r\n      )}\r\n    </Box>\r\n  ))}\r\n</SimpleGrid>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}