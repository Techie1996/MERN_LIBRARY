{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\MyBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { VStack, Heading, Input, Button, SimpleGrid, Text, useColorModeValue, useToast } from '@chakra-ui/react';\nimport BookCard from './BookCard'; // Import the BookCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBooks = ({\n  isAdmin\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [books, setBooks] = useState([]);\n  const toast = useToast();\n  const dummyData = useMemo(() => [{\n    id: 1,\n    volumeInfo: {\n      title: 'The Great Gatsby',\n      authors: ['F. Scott Fitzgerald'],\n      description: 'The story primarily concerns the young and mysterious millionaire Jay Gatsby.'\n    },\n    availabilityStatus: 'Available'\n  }, {\n    id: 2,\n    volumeInfo: {\n      title: 'To Kill a Mockingbird',\n      authors: ['Harper Lee'],\n      description: 'The novel explores the irrationality of adult attitudes toward race and class.'\n    },\n    availabilityStatus: 'Available'\n  }, {\n    id: 3,\n    volumeInfo: {\n      title: '1984',\n      authors: ['George Orwell'],\n      description: 'A dystopian novel set in Airstrip One, a province of the superstate Oceania.'\n    },\n    availabilityStatus: 'Available'\n  }, {\n    id: 4,\n    volumeInfo: {\n      title: 'The Hobbit',\n      authors: ['J.R.R. Tolkien'],\n      description: 'The hobbit Bilbo Baggins is persuaded by the wizard Gandalf to join a group of dwarves on a quest.'\n    },\n    availabilityStatus: 'Available'\n  }, {\n    id: 5,\n    volumeInfo: {\n      title: 'Pride and Prejudice',\n      authors: ['Jane Austen'],\n      description: 'The novel follows the character development of Elizabeth Bennet, the dynamic protagonist.'\n    },\n    availabilityStatus: 'Available'\n  }, {\n    id: 6,\n    volumeInfo: {\n      title: 'The Catcher in the Rye',\n      authors: ['J.D. Salinger'],\n      description: 'A story about a teenager named Holden Caulfield in New York City.'\n    },\n    availabilityStatus: 'Available'\n  }], []);\n  const fetchBooks = query => {\n    const filteredBooks = dummyData.filter(book => book.volumeInfo.title.toLowerCase().includes(query.toLowerCase()));\n    if (query === '') {\n      // Display all books when the search term is blank\n      setBooks(dummyData);\n    } else if (filteredBooks.length > 0) {\n      setBooks(filteredBooks);\n    } else {\n      setBooks([]);\n      showToast('No matching books found.');\n    }\n  };\n  useEffect(() => {\n    // Set initial state to all books when the component mounts\n    setBooks(dummyData);\n  }, [dummyData]);\n  const handleSearch = () => {\n    fetchBooks(searchTerm);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleAvailabilityChange = (bookId, newAvailability) => {\n    // Update the availability status of the book with the given bookId\n    const updatedBooks = books.map(book => book.id === bookId ? {\n      ...book,\n      availabilityStatus: newAvailability\n    } : book);\n\n    // Update the state with the modified books array\n    setBooks(updatedBooks);\n  };\n  const showToast = message => {\n    toast({\n      title: message,\n      status: 'info',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  const textColor = useColorModeValue('black', 'white');\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    color: textColor,\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search for books...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyDown: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), books.length > 0 ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        sm: 2,\n        md: 3\n      },\n      spacing: 5,\n      children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book,\n        isAdmin: isAdmin,\n        onAvailabilityChange: isAdmin ? handleAvailabilityChange : undefined\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      children: \"No books found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(MyBooks, \"zEllu3k4VLfbK4kG5OnSN9kcu84=\", false, function () {\n  return [useToast, useColorModeValue];\n});\n_c = MyBooks;\nexport default MyBooks;\nvar _c;\n$RefreshReg$(_c, \"MyBooks\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","VStack","Heading","Input","Button","SimpleGrid","Text","useColorModeValue","useToast","BookCard","jsxDEV","_jsxDEV","MyBooks","isAdmin","_s","searchTerm","setSearchTerm","books","setBooks","toast","dummyData","id","volumeInfo","title","authors","description","availabilityStatus","fetchBooks","query","filteredBooks","filter","book","toLowerCase","includes","length","showToast","handleSearch","handleKeyPress","e","key","handleAvailabilityChange","bookId","newAvailability","updatedBooks","map","message","status","duration","isClosable","textColor","spacing","color","width","maxW","marginX","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyDown","colorScheme","onClick","columns","base","sm","md","onAvailabilityChange","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/MyBooks.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  VStack,\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport BookCard from './BookCard'; // Import the BookCard component\r\n\r\nconst MyBooks = ({ isAdmin }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const toast = useToast();\r\n\r\n  const dummyData = useMemo(() => [\r\n    {\r\n      id: 1,\r\n      volumeInfo: {\r\n        title: 'The Great Gatsby',\r\n        authors: ['F. Scott Fitzgerald'],\r\n        description:\r\n          'The story primarily concerns the young and mysterious millionaire Jay Gatsby.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n    {\r\n      id: 2,\r\n      volumeInfo: {\r\n        title: 'To Kill a Mockingbird',\r\n        authors: ['Harper Lee'],\r\n        description:\r\n          'The novel explores the irrationality of adult attitudes toward race and class.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n    {\r\n      id: 3,\r\n      volumeInfo: {\r\n        title: '1984',\r\n        authors: ['George Orwell'],\r\n        description: 'A dystopian novel set in Airstrip One, a province of the superstate Oceania.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n    {\r\n      id: 4,\r\n      volumeInfo: {\r\n        title: 'The Hobbit',\r\n        authors: ['J.R.R. Tolkien'],\r\n        description:\r\n          'The hobbit Bilbo Baggins is persuaded by the wizard Gandalf to join a group of dwarves on a quest.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n    {\r\n      id: 5,\r\n      volumeInfo: {\r\n        title: 'Pride and Prejudice',\r\n        authors: ['Jane Austen'],\r\n        description:\r\n          'The novel follows the character development of Elizabeth Bennet, the dynamic protagonist.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n    {\r\n      id: 6,\r\n      volumeInfo: {\r\n        title: 'The Catcher in the Rye',\r\n        authors: ['J.D. Salinger'],\r\n        description: 'A story about a teenager named Holden Caulfield in New York City.',\r\n      },\r\n      availabilityStatus: 'Available',\r\n    },\r\n  ],[]);\r\n\r\n  const fetchBooks = (query) => {\r\n    const filteredBooks = dummyData.filter((book) =>\r\n      book.volumeInfo.title.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n\r\n    if (query === '') {\r\n      // Display all books when the search term is blank\r\n      setBooks(dummyData);\r\n    } else if (filteredBooks.length > 0) {\r\n      setBooks(filteredBooks);\r\n    } else {\r\n      setBooks([]);\r\n      showToast('No matching books found.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set initial state to all books when the component mounts\r\n    setBooks(dummyData);\r\n  }, [dummyData]);\r\n\r\n  const handleSearch = () => {\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleAvailabilityChange = (bookId, newAvailability) => {\r\n    // Update the availability status of the book with the given bookId\r\n    const updatedBooks = books.map((book) =>\r\n      book.id === bookId ? { ...book, availabilityStatus: newAvailability } : book\r\n    );\r\n\r\n    // Update the state with the modified books array\r\n    setBooks(updatedBooks);\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    toast({\r\n      title: message,\r\n      status: 'info',\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const textColor = useColorModeValue('black', 'white');\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color={textColor} width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        onKeyDown={handleKeyPress}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n      {books.length > 0 ? (\r\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5}>\r\n          {books.map((book) => (\r\n            <BookCard\r\n              key={book.id}\r\n              book={book}\r\n              isAdmin={isAdmin}\r\n              onAvailabilityChange={isAdmin ? handleAvailabilityChange : undefined}\r\n            />\r\n          ))}\r\n        </SimpleGrid>\r\n      ) : (\r\n        <Text>No books found</Text>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MyBooks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}