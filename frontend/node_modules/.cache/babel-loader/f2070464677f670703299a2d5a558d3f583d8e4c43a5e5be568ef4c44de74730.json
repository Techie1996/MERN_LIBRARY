{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Library.js\",\n  _s = $RefreshSig$();\n// components/Library.js\n\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Heading, HStack, Button } from '@chakra-ui/react';\nimport MyBooks from './MyBooks';\nimport Google from './Google';\nimport Logout from './Authentication/Logout';\nimport AdminDashboard from './AdminDashboard'; // Import the AdminDashboard component\n\n// components/Library.js\n\n// ... (existing imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Library = () => {\n  _s();\n  const [activeComponent, setActiveComponent] = useState('MyBooks');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    // Placeholder logic: Replace this with your actual logic to check if the user is an admin\n    const userData = JSON.parse(localStorage.getItem('userInfo'));\n    const userIsAdmin = userData && userData.role === 'admin';\n    setIsAdmin(userIsAdmin);\n  }, []);\n  const handleButtonClick = component => {\n    setActiveComponent(component);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    width: \"100%\",\n    maxW: \"1000px\",\n    marginX: \"auto\",\n    children: isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      isAdmin: isAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [activeComponent === 'MyBooks' && /*#__PURE__*/_jsxDEV(MyBooks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }, this), activeComponent === 'Google' && /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Library, \"/GCBn3PZbWw1e399tcs38/Zy+B8=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","HStack","Button","MyBooks","Google","Logout","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","Library","_s","activeComponent","setActiveComponent","isAdmin","setIsAdmin","userData","JSON","parse","localStorage","getItem","userIsAdmin","role","handleButtonClick","component","spacing","width","maxW","marginX","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Library.js"],"sourcesContent":["// components/Library.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { VStack, Heading, HStack, Button } from '@chakra-ui/react';\r\nimport MyBooks from './MyBooks';\r\nimport Google from './Google';\r\nimport Logout from './Authentication/Logout';\r\nimport AdminDashboard from './AdminDashboard';  // Import the AdminDashboard component\r\n\r\n// components/Library.js\r\n\r\n// ... (existing imports)\r\n\r\nconst Library = () => {\r\n  const [activeComponent, setActiveComponent] = useState('MyBooks');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Placeholder logic: Replace this with your actual logic to check if the user is an admin\r\n    const userData = JSON.parse(localStorage.getItem('userInfo'));\r\n    const userIsAdmin = userData && userData.role === 'admin';\r\n\r\n    setIsAdmin(userIsAdmin);\r\n  }, []);\r\n\r\n  const handleButtonClick = (component) => {\r\n    setActiveComponent(component);\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5\" width=\"100%\" maxW=\"1000px\" marginX=\"auto\">\r\n      {/* ... (existing code) */}\r\n      {isAdmin ? <AdminDashboard isAdmin={isAdmin} /> : (\r\n        <>\r\n          {activeComponent === 'MyBooks' && <MyBooks />}\r\n          {activeComponent === 'Google' && <Google />}\r\n        </>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AAClE,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAE;;AAEhD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC;EACjE,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7D,MAAMC,WAAW,GAAGL,QAAQ,IAAIA,QAAQ,CAACM,IAAI,KAAK,OAAO;IAEzDP,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,iBAAiB,GAAIC,SAAS,IAAK;IACvCX,kBAAkB,CAACW,SAAS,CAAC;EAC/B,CAAC;EAED,oBACEjB,OAAA,CAACT,MAAM;IAAC2B,OAAO,EAAC,GAAG;IAACC,KAAK,EAAC,MAAM;IAACC,IAAI,EAAC,QAAQ;IAACC,OAAO,EAAC,MAAM;IAAAC,QAAA,EAE1Df,OAAO,gBAAGP,OAAA,CAACF,cAAc;MAACS,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAC7C1B,OAAA,CAAAE,SAAA;MAAAoB,QAAA,GACGjB,eAAe,KAAK,SAAS,iBAAIL,OAAA,CAACL,OAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5CrB,eAAe,KAAK,QAAQ,iBAAIL,OAAA,CAACJ,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC3C;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACtB,EAAA,CA3BID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}