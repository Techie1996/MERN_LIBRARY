{"ast":null,"code":"// components/Library.js\nimport React,{useState,useEffect}from'react';import{VStack,Heading,HStack,Button}from'@chakra-ui/react';import MyBooks from'./MyBooks';import Google from'./Google';import Logout from'./Authentication/Logout';import AdminDashboard from'./AdminDashboard';// Import the AdminDashboard component\n//import BookCard from './BookCard';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Library=()=>{const[activeComponent,setActiveComponent]=useState('MyBooks');const[isAdmin,setIsAdmin]=useState(false);useEffect(()=>{const userData=JSON.parse(localStorage.getItem('userInfo'));const userIsAdmin=userData&&userData.isAdmin;// Assuming the user info has the 'isAdmin' property\nsetIsAdmin(userIsAdmin);},[]);// Empty dependency array to run the effect only once when the component mounts\nconst handleButtonClick=component=>{setActiveComponent(component);};const handleTransaction=async(bookId,transactionType)=>{// Transaction logic\n};return/*#__PURE__*/_jsxs(VStack,{spacing:\"8\",width:\"100%\",maxW:\"1000px\",marginX:\"auto\",className:\"library-container\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:\"5\",children:[/*#__PURE__*/_jsx(Button,{colorScheme:activeComponent==='MyBooks'?'blue':'gray',onClick:()=>handleButtonClick('MyBooks'),children:\"My Books\"}),/*#__PURE__*/_jsx(Button,{colorScheme:activeComponent==='Google'?'green':'gray',onClick:()=>handleButtonClick('Google'),children:\"Google Books\"}),/*#__PURE__*/_jsx(Logout,{})]}),/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"xl\",children:isAdmin?'Admin Dashboard':''}),isAdmin?/*#__PURE__*/_jsx(AdminDashboard,{isAdmin:isAdmin,isEditable:true}):/*#__PURE__*/_jsxs(_Fragment,{children:[activeComponent==='MyBooks'&&/*#__PURE__*/_jsx(MyBooks,{isEditable:true,onTransaction:handleTransaction}),activeComponent==='Google'&&/*#__PURE__*/_jsx(Google,{})]}),isAdmin&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MyBooks,{isAdmin:true,isEditable:true,onTransaction:handleTransaction})})]});};export default Library;","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","HStack","Button","MyBooks","Google","Logout","AdminDashboard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Library","activeComponent","setActiveComponent","isAdmin","setIsAdmin","userData","JSON","parse","localStorage","getItem","userIsAdmin","handleButtonClick","component","handleTransaction","bookId","transactionType","spacing","width","maxW","marginX","className","children","colorScheme","onClick","as","size","isEditable","onTransaction"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/MERN-LIBRARY-APP/frontend/src/components/Library.js"],"sourcesContent":["// components/Library.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { VStack, Heading, HStack, Button } from '@chakra-ui/react';\r\nimport MyBooks from './MyBooks';\r\nimport Google from './Google';\r\nimport Logout from './Authentication/Logout';\r\nimport AdminDashboard from './AdminDashboard'; // Import the AdminDashboard component\r\n//import BookCard from './BookCard';\r\n\r\nconst Library = () => {\r\n  const [activeComponent, setActiveComponent] = useState('MyBooks');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem('userInfo'));\r\n    const userIsAdmin = userData && userData.isAdmin; // Assuming the user info has the 'isAdmin' property\r\n\r\n    setIsAdmin(userIsAdmin);\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  const handleButtonClick = (component) => {\r\n    setActiveComponent(component);\r\n  };\r\n\r\n  const handleTransaction = async (bookId, transactionType) => {\r\n    // Transaction logic\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"8\" width=\"100%\" maxW=\"1000px\" marginX=\"auto\" className=\"library-container\">\r\n      <HStack spacing=\"5\">\r\n        <Button\r\n          colorScheme={activeComponent === 'MyBooks' ? 'blue' : 'gray'}\r\n          onClick={() => handleButtonClick('MyBooks')}\r\n        >\r\n          My Books\r\n        </Button>\r\n        <Button\r\n          colorScheme={activeComponent === 'Google' ? 'green' : 'gray'}\r\n          onClick={() => handleButtonClick('Google')}\r\n        >\r\n          Google Books\r\n        </Button>\r\n        <Logout />\r\n      </HStack>\r\n      <Heading as=\"h1\" size=\"xl\" >\r\n        {isAdmin ? 'Admin Dashboard' : ''}\r\n      </Heading>\r\n      {isAdmin ? (\r\n        <AdminDashboard isAdmin={isAdmin} isEditable={true} />\r\n      ) : (\r\n        <>\r\n          {activeComponent === 'MyBooks' && <MyBooks isEditable={true} onTransaction={handleTransaction} />}\r\n          {activeComponent === 'Google' && <Google />}\r\n        </>\r\n      )}\r\n      {isAdmin && (\r\n        <>\r\n          {/* Display the same content as in the library with editable availability status */}\r\n          <MyBooks isAdmin={true} isEditable={true} onTransaction={handleTransaction} />\r\n          {/* Conditionally render BookCard for admin users */}\r\n          {/* You can add more components below if needed */}\r\n        </>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}