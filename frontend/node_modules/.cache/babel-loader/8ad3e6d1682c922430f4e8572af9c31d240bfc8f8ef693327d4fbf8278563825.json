{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Library.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { VStack, Heading, Input, Button, SimpleGrid, Box, Text, useColorModeValue } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Library = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if the user is authenticated (dummy logic)\n    const isAuthenticated = checkAuthentication();\n\n    // Redirect to login if not authenticated\n    if (!isAuthenticated) {\n      navigate('/library');\n    }\n  }, [navigate]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchBooks = async query => {\n    setLoading(true);\n    try {\n      // Dummy data fetching logic\n      const dummyData = [{\n        id: 1,\n        volumeInfo: {\n          title: 'Dummy Book 1',\n          authors: ['Author 1'],\n          description: 'Description for Dummy Book 1'\n        },\n        availabilityStatus: 'Available'\n      }, {\n        id: 2,\n        volumeInfo: {\n          title: 'Dummy Book 2',\n          authors: ['Author 2'],\n          description: 'Description for Dummy Book 2'\n        },\n        availabilityStatus: 'Available'\n      }, {\n        id: 3,\n        volumeInfo: {\n          title: 'Dummy Book 3',\n          authors: ['Author 3'],\n          description: 'Description for Dummy Book 3'\n        },\n        availabilityStatus: 'Not Available'\n      }, {\n        id: 4,\n        volumeInfo: {\n          title: 'Dummy Book 4',\n          authors: ['Author 4'],\n          description: 'Description for Dummy Book 4'\n        },\n        availabilityStatus: 'Available'\n      }, {\n        id: 5,\n        volumeInfo: {\n          title: 'Dummy Book 5',\n          authors: ['Author 5'],\n          description: 'Description for Dummy Book 5'\n        },\n        availabilityStatus: 'Not Available'\n      }, {\n        id: 6,\n        volumeInfo: {\n          title: 'Dummy Book 6',\n          authors: ['Author 6'],\n          description: 'Description for Dummy Book 6'\n        },\n        availabilityStatus: 'Available'\n      }\n      // Add more dummy data as needed\n      ];\n\n      // Simulate an API delay for loading\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setBooks(dummyData);\n    } catch (error) {\n      console.error('Error fetching books:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchBooks(searchTerm);\n  };\n  const cardBgColor = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('black', 'white');\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5\",\n    color: textColor,\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"xl\",\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search for books...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleSearch,\n      isLoading: loading,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), books.length > 0 && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        sm: 2,\n        md: 3\n      },\n      spacing: 5,\n      children: books.map(book => /*#__PURE__*/_jsxDEV(Box, {\n        p: \"3\",\n        borderWidth: \"1px\",\n        borderRadius: \"md\",\n        bg: cardBgColor,\n        _hover: {\n          shadow: 'md'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          size: \"sm\",\n          mb: \"2\",\n          noOfLines: 2,\n          children: book.volumeInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), book.volumeInfo.authors && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xs\",\n          color: \"gray.500\",\n          noOfLines: 1,\n          children: [\"Author(s): \", book.volumeInfo.authors.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), book.volumeInfo.description && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xs\",\n          color: \"gray.500\",\n          noOfLines: 3,\n          children: book.volumeInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), book.availabilityStatus && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xs\",\n          color: \"green.500\",\n          children: [\"Availability: \", book.availabilityStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n// Dummy authentication logic (replace with your actual logic)\n_s(Library, \"sS7S5/PgWpiAV5FWhWr/oBxu1bE=\", false, function () {\n  return [useNavigate, useColorModeValue, useColorModeValue];\n});\n_c = Library;\nconst checkAuthentication = () => {\n  // For simplicity, consider the user as authenticated if a dummy token exists\n  const authToken = localStorage.getItem('authToken');\n  return !!authToken;\n};\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","VStack","Heading","Input","Button","SimpleGrid","Box","Text","useColorModeValue","jsxDEV","_jsxDEV","Library","_s","navigate","isAuthenticated","checkAuthentication","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","fetchBooks","query","dummyData","id","volumeInfo","title","authors","description","availabilityStatus","Promise","resolve","setTimeout","error","console","message","handleSearch","cardBgColor","textColor","spacing","color","width","maxW","marginX","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","colorScheme","onClick","isLoading","length","columns","base","sm","md","map","book","p","borderWidth","borderRadius","bg","_hover","shadow","mb","noOfLines","fontSize","join","_c","authToken","localStorage","getItem","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Library.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  VStack,\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nconst Library = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if the user is authenticated (dummy logic)\r\n    const isAuthenticated = checkAuthentication();\r\n\r\n    // Redirect to login if not authenticated\r\n    if (!isAuthenticated) {\r\n      navigate('/library');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchBooks = async (query) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Dummy data fetching logic\r\n      const dummyData = [\r\n        {\r\n          id: 1,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 1',\r\n            authors: ['Author 1'],\r\n            description: 'Description for Dummy Book 1',\r\n          },\r\n          availabilityStatus: 'Available',\r\n        },\r\n        {\r\n          id: 2,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 2',\r\n            authors: ['Author 2'],\r\n            description: 'Description for Dummy Book 2',\r\n          },\r\n          availabilityStatus: 'Available',\r\n        },\r\n        {\r\n          id: 3,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 3',\r\n            authors: ['Author 3'],\r\n            description: 'Description for Dummy Book 3',\r\n          },\r\n          availabilityStatus: 'Not Available',\r\n        },\r\n        {\r\n          id: 4,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 4',\r\n            authors: ['Author 4'],\r\n            description: 'Description for Dummy Book 4',\r\n          },\r\n          availabilityStatus: 'Available',\r\n        },\r\n        {\r\n          id: 5,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 5',\r\n            authors: ['Author 5'],\r\n            description: 'Description for Dummy Book 5',\r\n          },\r\n          availabilityStatus: 'Not Available',\r\n        },\r\n        {\r\n          id: 6,\r\n          volumeInfo: {\r\n            title: 'Dummy Book 6',\r\n            authors: ['Author 6'],\r\n            description: 'Description for Dummy Book 6',\r\n          },\r\n          availabilityStatus: 'Available',\r\n        },\r\n        // Add more dummy data as needed\r\n      ];\r\n\r\n      // Simulate an API delay for loading\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      setBooks(dummyData);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  const cardBgColor = useColorModeValue('white', 'gray.700');\r\n  const textColor = useColorModeValue('black', 'white');\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color={textColor} width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch} isLoading={loading}>\r\n        Search\r\n      </Button>\r\n      {books.length > 0 && (\r\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5}>\r\n          {books.map((book) => (\r\n            <Box\r\n              key={book.id}\r\n              p=\"3\"\r\n              borderWidth=\"1px\"\r\n              borderRadius=\"md\"\r\n              bg={cardBgColor}\r\n              _hover={{ shadow: 'md' }}\r\n            >\r\n              <Heading as=\"h3\" size=\"sm\" mb=\"2\" noOfLines={2}>\r\n                {book.volumeInfo.title}\r\n              </Heading>\r\n              {book.volumeInfo.authors && (\r\n                <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={1}>\r\n                  Author(s): {book.volumeInfo.authors.join(', ')}\r\n                </Text>\r\n              )}\r\n              {book.volumeInfo.description && (\r\n                <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={3}>\r\n                  {book.volumeInfo.description}\r\n                </Text>\r\n              )}\r\n              {book.availabilityStatus && (\r\n                <Text fontSize=\"xs\" color=\"green.500\">\r\n                  Availability: {book.availabilityStatus}\r\n                </Text>\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\n// Dummy authentication logic (replace with your actual logic)\r\nconst checkAuthentication = () => {\r\n  // For simplicity, consider the user as authenticated if a dummy token exists\r\n  const authToken = localStorage.getItem('authToken');\r\n  return !!authToken;\r\n};\r\n\r\nexport default Library;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}