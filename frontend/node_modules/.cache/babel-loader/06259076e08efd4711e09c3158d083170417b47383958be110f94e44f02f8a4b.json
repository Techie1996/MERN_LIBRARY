{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\AdminBooks.js\",\n  _s = $RefreshSig$();\n// components/AdminBooks.js\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Text, Button, HStack } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminBooks = () => {\n  _s();\n  // Assume you have a list of books, each with an availability status\n  const [books, setBooks] = useState([{\n    id: 1,\n    title: 'Book 1',\n    available: true\n  }, {\n    id: 2,\n    title: 'Book 2',\n    available: false\n  }\n  // Add more books as needed\n  ]);\n\n  // Function to toggle the availability status of a book\n  const toggleAvailability = bookId => {\n    setBooks(prevBooks => prevBooks.map(book => book.id === bookId ? {\n      ...book,\n      available: !book.available\n    } : book));\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"4\",\n    align: \"flex-start\",\n    width: \"100%\",\n    maxW: \"800px\",\n    marginX: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      children: \"Manage Book Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), books.map(book => /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: \"2\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleAvailability(book.id),\n        children: book.available ? 'Make Unavailable' : 'Make Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, book.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminBooks, \"MWbeOAkPdzOPxxGMCvLofw+1vAE=\");\n_c = AdminBooks;\nexport default AdminBooks;\nvar _c;\n$RefreshReg$(_c, \"AdminBooks\");","map":{"version":3,"names":["React","useState","useEffect","VStack","Text","Button","HStack","jsxDEV","_jsxDEV","AdminBooks","_s","books","setBooks","id","title","available","toggleAvailability","bookId","prevBooks","map","book","spacing","align","width","maxW","marginX","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/AdminBooks.js"],"sourcesContent":["// components/AdminBooks.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { VStack, Text, Button, HStack } from '@chakra-ui/react';\r\n\r\nconst AdminBooks = () => {\r\n  // Assume you have a list of books, each with an availability status\r\n  const [books, setBooks] = useState([\r\n    { id: 1, title: 'Book 1', available: true },\r\n    { id: 2, title: 'Book 2', available: false },\r\n    // Add more books as needed\r\n  ]);\r\n\r\n  // Function to toggle the availability status of a book\r\n  const toggleAvailability = (bookId) => {\r\n    setBooks((prevBooks) =>\r\n      prevBooks.map((book) =>\r\n        book.id === bookId ? { ...book, available: !book.available } : book\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"4\" align=\"flex-start\" width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Text fontSize=\"xl\">Manage Book Availability</Text>\r\n      {books.map((book) => (\r\n        <HStack key={book.id} spacing=\"2\">\r\n          <Text>{book.title}</Text>\r\n          <Button onClick={() => toggleAvailability(book.id)}>\r\n            {book.available ? 'Make Unavailable' : 'Make Available'}\r\n          </Button>\r\n        </HStack>\r\n      ))}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default AdminBooks;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CACjC;IAAEY,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM;EAC3C;EAAA,CACD,CAAC;;EAEF;EACA,MAAMC,kBAAkB,GAAIC,MAAM,IAAK;IACrCL,QAAQ,CAAEM,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACP,EAAE,KAAKI,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAEL,SAAS,EAAE,CAACK,IAAI,CAACL;IAAU,CAAC,GAAGK,IACjE,CACF,CAAC;EACH,CAAC;EAED,oBACEZ,OAAA,CAACL,MAAM;IAACkB,OAAO,EAAC,GAAG;IAACC,KAAK,EAAC,YAAY;IAACC,KAAK,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;IAACC,OAAO,EAAC,MAAM;IAAAC,QAAA,gBAC7ElB,OAAA,CAACJ,IAAI;MAACuB,QAAQ,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAClDpB,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACdZ,OAAA,CAACF,MAAM;MAAee,OAAO,EAAC,GAAG;MAAAK,QAAA,gBAC/BlB,OAAA,CAACJ,IAAI;QAAAsB,QAAA,EAAEN,IAAI,CAACN;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBvB,OAAA,CAACH,MAAM;QAAC2B,OAAO,EAAEA,CAAA,KAAMhB,kBAAkB,CAACI,IAAI,CAACP,EAAE,CAAE;QAAAa,QAAA,EAChDN,IAAI,CAACL,SAAS,GAAG,kBAAkB,GAAG;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA,GAJEX,IAAI,CAACP,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACrB,EAAA,CA9BID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}