{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reyan\\\\OneDrive\\\\Desktop\\\\ONline Library\\\\mern-library-app\\\\frontend\\\\src\\\\components\\\\Authentication\\\\Logout.js\",\n  _s = $RefreshSig$();\n// src/authentication/Logout.js\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleLogout = async () => {\n      try {\n        // Check if the user is authenticated\n        const authToken = localStorage.getItem('authToken');\n        if (!authToken) {\n          // If not authenticated, do nothing\n          return;\n        }\n\n        // Perform any additional logout logic if needed\n\n        // Clear the authentication token (if stored locally)\n        localStorage.removeItem('authToken');\n\n        // Redirect to the login page after logout\n        navigate('/login');\n      } catch (error) {\n        console.error('Error during logout:', error);\n      }\n    };\n\n    // Call the logout function\n    handleLogout();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Logging out...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(Logout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","Logout","_s","navigate","handleLogout","authToken","localStorage","getItem","removeItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/Authentication/Logout.js"],"sourcesContent":["// src/authentication/Logout.js\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const handleLogout = async () => {\r\n      try {\r\n        // Check if the user is authenticated\r\n        const authToken = localStorage.getItem('authToken');\r\n        if (!authToken) {\r\n          // If not authenticated, do nothing\r\n          return;\r\n        }\r\n\r\n        // Perform any additional logout logic if needed\r\n\r\n        // Clear the authentication token (if stored locally)\r\n        localStorage.removeItem('authToken');\r\n\r\n        // Redirect to the login page after logout\r\n        navigate('/login');\r\n      } catch (error) {\r\n        console.error('Error during logout:', error);\r\n      }\r\n    };\r\n\r\n    // Call the logout function\r\n    handleLogout();\r\n  }, [navigate]);\r\n\r\n  return <div>Logging out...</div>;\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACnD,IAAI,CAACF,SAAS,EAAE;UACd;UACA;QACF;;QAEA;;QAEA;QACAC,YAAY,CAACE,UAAU,CAAC,WAAW,CAAC;;QAEpC;QACAL,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACAL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAW,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClC,CAAC;AAACb,EAAA,CA9BID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAkB,EAAA,GADxBf,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}