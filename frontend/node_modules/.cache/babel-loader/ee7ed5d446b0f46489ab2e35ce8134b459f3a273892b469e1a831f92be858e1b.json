{"ast":null,"code":"import React,{useState,useEffect}from'react';import{VStack,Heading,Input,Button,SimpleGrid,Text,useColorModeValue,useToast}from'@chakra-ui/react';import BookCard from'./BookCard';// Import the BookCard component\nimport axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MyBooks=_ref=>{let{isAdmin}=_ref;const[searchTerm,setSearchTerm]=useState('');const[books,setBooks]=useState([]);const toast=useToast();const fetchBooks=async query=>{try{const response=await axios.get(\"http://localhost:5000/api/book/my-books?searchTerm=\".concat(query));const data=response.data;console.log('Fetched data:',data);// Log the fetched data to see what you're getting\nsetBooks(data);}catch(error){console.error('Error fetching books:',error);showToast('Error fetching books');}};useEffect(()=>{// Set initial state to all books when the component mounts\nfetchBooks('');});const handleSearch=()=>{fetchBooks(searchTerm);};const handleKeyPress=e=>{if(e.key==='Enter'){handleSearch();}};const handleAvailabilityChange=(bookId,newAvailability)=>{// Update the availability status of the book with the given bookId\nconst updatedBooks=books.map(book=>book.id===bookId?{...book,availabilityStatus:newAvailability}:book);// Update the state with the modified books array\nsetBooks(updatedBooks);};const showToast=message=>{toast({title:message,status:'info',duration:5000,isClosable:true});};const textColor=useColorModeValue('black','white');return/*#__PURE__*/_jsxs(VStack,{spacing:\"5\",color:textColor,width:\"100%\",maxW:\"800px\",marginX:\"auto\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"xl\",children:\"Library\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"Search for books...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),onKeyDown:handleKeyPress}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleSearch,children:\"Search\"}),books.length>0?/*#__PURE__*/_jsx(SimpleGrid,{columns:{base:1,sm:2,md:3},spacing:5,children:books.map(book=>/*#__PURE__*/_jsx(BookCard,{book:book,isAdmin:isAdmin,onAvailabilityChange:isAdmin?handleAvailabilityChange:undefined},book.id))}):/*#__PURE__*/_jsx(Text,{children:\"No books found\"})]});};export default MyBooks;","map":{"version":3,"names":["React","useState","useEffect","VStack","Heading","Input","Button","SimpleGrid","Text","useColorModeValue","useToast","BookCard","axios","jsx","_jsx","jsxs","_jsxs","MyBooks","_ref","isAdmin","searchTerm","setSearchTerm","books","setBooks","toast","fetchBooks","query","response","get","concat","data","console","log","error","showToast","handleSearch","handleKeyPress","e","key","handleAvailabilityChange","bookId","newAvailability","updatedBooks","map","book","id","availabilityStatus","message","title","status","duration","isClosable","textColor","spacing","color","width","maxW","marginX","children","as","size","placeholder","value","onChange","target","onKeyDown","colorScheme","onClick","length","columns","base","sm","md","onAvailabilityChange","undefined"],"sources":["C:/Users/Reyan/OneDrive/Desktop/ONline Library/mern-library-app/frontend/src/components/MyBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  VStack,\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport BookCard from './BookCard'; // Import the BookCard component\r\nimport axios from 'axios';\r\n\r\nconst MyBooks = ({ isAdmin }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const toast = useToast();\r\n\r\n  const fetchBooks = async (query) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/book/my-books?searchTerm=${query}`);\r\n      const data = response.data;\r\n      console.log('Fetched data:', data); // Log the fetched data to see what you're getting\r\n      setBooks(data);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error);\r\n      showToast('Error fetching books');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set initial state to all books when the component mounts\r\n    fetchBooks('');\r\n  });\r\n\r\n  const handleSearch = () => {\r\n    fetchBooks(searchTerm);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleAvailabilityChange = (bookId, newAvailability) => {\r\n    // Update the availability status of the book with the given bookId\r\n    const updatedBooks = books.map((book) =>\r\n      book.id === bookId ? { ...book, availabilityStatus: newAvailability } : book\r\n    );\r\n\r\n    // Update the state with the modified books array\r\n    setBooks(updatedBooks);\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    toast({\r\n      title: message,\r\n      status: 'info',\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const textColor = useColorModeValue('black', 'white');\r\n\r\n  return (\r\n    <VStack spacing=\"5\" color={textColor} width=\"100%\" maxW=\"800px\" marginX=\"auto\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Library\r\n      </Heading>\r\n      <Input\r\n        placeholder=\"Search for books...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        onKeyDown={handleKeyPress}\r\n      />\r\n      <Button colorScheme=\"blue\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n      {books.length > 0 ? (\r\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 3 }} spacing={5}>\r\n          {books.map((book) => (\r\n            <BookCard\r\n              key={book.id}\r\n              book={book}\r\n              isAdmin={isAdmin}\r\n              onAvailabilityChange={isAdmin ? handleAvailabilityChange : undefined}\r\n            />\r\n          ))}\r\n        </SimpleGrid>\r\n      ) : (\r\n        <Text>No books found</Text>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default MyBooks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}